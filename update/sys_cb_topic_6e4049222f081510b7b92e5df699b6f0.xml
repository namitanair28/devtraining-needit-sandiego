<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_topic">
    <sys_cb_topic action="INSERT_OR_UPDATE">
        <applicability/>
        <applicability_mode>query</applicability_mode>
        <autopilot_topic>false</autopilot_topic>
        <category>3efd22da0b214300a1b16d2367673b32</category>
        <channels/>
        <connect_queue/>
        <description>ITSM conversation flow to check status of incidents and requested items.</description>
        <expose_on_palette>false</expose_on_palette>
        <flexible_conversation_switching>false</flexible_conversation_switching>
        <graph>{
  "graph_api_version": "1.0.39",
  "goals": {
    "primary": {
      "id": "primary",
      "trigger": {
        "type": "primary"
      },
      "name": "primary",
      "applicability": "",
      "description": "",
      "nodes": {
        "c587a18289854800b91793160e456e2e": {
          "id": "c587a18289854800b91793160e456e2e",
          "stepType": "Start",
          "name": "Start",
          "greetingResponse": {
            "mode": "simple",
            "value": ""
          },
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "25988d9eecfa46f7be55276d8eea7356": {
          "id": "25988d9eecfa46f7be55276d8eea7356",
          "stepType": "TerminateGoal",
          "name": "End",
          "confirmationMessage": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "964a1722dd0947978d00a74b43e2bb21": {
          "id": "964a1722dd0947978d00a74b43e2bb21",
          "name": "Check Incidents and Requested Items",
          "script": "(function execute() {\n    /*\n        Determining whether there are,\n        1. Active incidents opened by the current user\n        2. Active Requested items requested for the current user\n        and assigning the corresponding script variables.\n    */\n\n    // Setting the incident count\n    var incidents = new GlideAggregate('incident');\n    incidents.addQuery('active', true);\n    incidents.addQuery('caller_id', vaInputs.user);\n    incidents.addAggregate('COUNT');\n    incidents.query();\n    var incidentCount = 0;\n    if (incidents.next())\n        incidentCount = incidents.getAggregate('COUNT');\n        \n    vaVars.incident_count = incidentCount;\n\n    // Setting the requested items count\n    var reqItems = new GlideAggregate('sc_req_item');\n    reqItems.addQuery('active', true);\n    reqItems.addQuery('request.requested_for', vaInputs.user);\n    reqItems.addAggregate('COUNT');\n    reqItems.query();\n    var reqItemsCount = 0;\n    if (reqItems.next())\n        reqItemsCount = reqItems.getAggregate('COUNT');\n\n    vaVars.requested_item_count = reqItemsCount;\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "6f2d998aa07a403682d1afb5b8a857f5": {
          "id": "6f2d998aa07a403682d1afb5b8a857f5",
          "stepType": "Decision",
          "name": "Records  Decision",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "cd7061bc68764706b9fc69c0a7a01a04": {
          "stepType": "ReferenceChoicePrompt",
          "name": "Get Record",
          "prompt": {
            "value": "(function execute() {\n    if (vaVars.table_name == 'incident') {\n        if (parseInt(vaVars.incident_count) &gt; parseInt(vaVars.limit)) \n            return gs.getMessage('You have {0} incidents:', vaVars.incident_count);\n        else\n            return gs.getMessage('Here are your incidents:');\n    }\n\n    if (parseInt(vaVars.requested_item_count) &gt; parseInt(vaVars.limit)) \n        return gs.getMessage('You have {0} requested items:', vaVars.requested_item_count);\n    return gs.getMessage('Here are your requested items:');\n})()\n",
            "mode": "script"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          },
          "optional": false,
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "bb825aaf85784e4682d77378e21daab3",
          "id": "cd7061bc68764706b9fc69c0a7a01a04",
          "mode": "external",
          "script": "(function execute() {\n    /*\n        1. Query the requested items table and get all the active items requested_for the user\n        2. Show the recently updated 5(limit) requested items, apply pagination if there are more than 5.\n    */\n\n    var count = 0;\n    var options = [];    \n    var gr = new GlideRecord(vaVars.table_name);\n    gr.addActiveQuery();\n    if (vaVars.table_name == 'incident')\n        gr.addQuery('caller_id', vaInputs.user);\n    else \n        gr.addQuery('request.requested_for', vaInputs.user);\n\n    gr.orderByDesc('sys_updated_on');\n    gr.query();\n\n    count = gr.getRowCount();\n    vaVars.count = count;\n    var cnt = 0;\n\n    while(gr.next()) {\n        if (gr.canRead()) {\n            if (vaVars.table_name == 'incident')\n                options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('short_description') + ' [' + gr.getValue('number') + ']'});\n            else\n                options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('cat_item')  + ' [' + gr.getValue('number') + ']'});\n            cnt++;\n        } \n    }\n        \n    return options;\n})()",
          "noRecordsResponseMsg": {
            "mode": "simple",
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": ""
                  },
                  {
                    "text": "No Records Found"
                  },
                  {
                    "text": ""
                  }
                ]
              }
            ]
          },
          "condition": {
            "value": "(function execute() {\n    /*\n        1. Query the requested items table and get all the active items requested_for the user\n        2. Show the recently updated 5(limit) requested items, apply pagination if there are more than 5.\n    */\n\n    var count = 0;\n    var options = [];    \n    var gr = new GlideRecord(vaVars.table_name);\n    gr.addActiveQuery();\n    if (vaVars.table_name == 'incident')\n        gr.addQuery('caller_id', vaInputs.user);\n    else \n        gr.addQuery('request.requested_for', vaInputs.user);\n\n    gr.orderByDesc('sys_updated_on');\n    gr.query();\n\n    count = gr.getRowCount();\n    vaVars.count = count;\n    var cnt = 0;\n\n    while(gr.next()) {\n        if (gr.canRead()) {\n            if (vaVars.table_name == 'incident')\n                options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('short_description') + ' [' + gr.getValue('number') + ']'});\n            else\n                options.push({ 'value': gr.getUniqueValue(), 'label': gr.getDisplayValue('cat_item')  + ' [' + gr.getValue('number') + ']'});\n            cnt++;\n        } \n    }\n        \n    return options;\n})()",
            "mode": "external_script"
          },
          "table": "sc_req_item",
          "withNluUserInput": false,
          "skipIfFulfilled": true,
          "entity": {
            "id": "ticketnumber"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "hasCardHeader": false
        },
        "4fa5b9e4e7254eccaefc857ad5786381": {
          "stepType": "ChoicePrompt",
          "name": "Incident or Requested Item",
          "prompt": {
            "value": "(function execute() {\n    var output = '';\n    var incidents = '';\n    var items = '';\n\n    if (vaVars.incident_count != 1) {\n            incidents = gs.getMessage('{0} open incidents',vaVars.incident_count);\n    } else {\n            incidents = gs.getMessage('{0} open incident', vaVars.incident_count);\n    }\n\n    if (vaVars.requested_item_count != 1) {\n            items = gs.getMessage('{0} requested items', vaVars.requested_item_count);\n    } else {\n            items = gs.getMessage('{0} requested item', vaVars.requested_item_count);\n    }\n\n    return gs.getMessage('I just checked and you have {0} and {1}.  Which status would you like to check?', [incidents,items]);\n})()\n",
            "mode": "script"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          },
          "optional": false,
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "f07d049df6f64f8497f1f425c5c5b2d8",
          "id": "4fa5b9e4e7254eccaefc857ad5786381",
          "withNluUserInput": false,
          "skipIfFulfilled": true,
          "entity": {
            "id": "tasktype"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "hasCardHeader": false
        },
        "da9fcbdd15f147a0ac882a028591bcef": {
          "id": "da9fcbdd15f147a0ac882a028591bcef",
          "stepType": "TextOutput",
          "name": "No Incidents or Requested Items",
          "value": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": ""
                  },
                  {
                    "text": "You have no active incidents or requested items."
                  },
                  {
                    "text": ""
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          },
          "secure": false
        },
        "911e40bccaec4adf827c92051eb5f86f": {
          "id": "911e40bccaec4adf827c92051eb5f86f",
          "stepType": "Prompt",
          "name": "Add Comment",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": ""
                  },
                  {
                    "text": "Would you like to add a comment?"
                  },
                  {
                    "text": ""
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          },
          "optional": false,
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "41bf37f22738413d8d998e90440c489a",
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "entity": {
            "id": ""
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "inputType": {
            "format": "Text",
            "script": ""
          }
        },
        "5b081cc2939241b69c5a8da1d061a695": {
          "id": "5b081cc2939241b69c5a8da1d061a695",
          "stepType": "Decision",
          "name": "Add Comment Decision",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "fa58d9fcb0274b53a79d526967c40b5a": {
          "id": "fa58d9fcb0274b53a79d526967c40b5a",
          "stepType": "Prompt",
          "name": "Comment",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": ""
                  },
                  {
                    "text": "Please enter your comment."
                  },
                  {
                    "text": ""
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          },
          "optional": false,
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "b9c00d3c377846cda0084871ced16feb",
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "entity": {
            "id": ""
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "inputType": {
            "format": "Text",
            "script": ""
          }
        },
        "3f774f18478d4f22b2e060ba026ba718": {
          "id": "3f774f18478d4f22b2e060ba026ba718",
          "stepType": "ScriptOutput",
          "name": "Update Record",
          "output_type": "single_part",
          "script": "(function execute() {\n    var response = '';\n    var gr = new GlideRecordSecure(vaVars.table_name);\n    if (gr.get(vaVars.sys_id)) {\n        var comment = vaInputs.comment.getValue().trim();\n        if (comment) {\n            gr.comments = comment;\n            gr.update();\n            if (vaVars.table_name == 'incident')\n                response = gs.getMessage(\"I've updated the incident.\");\n            else\n                response = gs.getMessage(\"I've updated the requested item.\");  \n        } else {\n            response = gs.getMessage(\"OK, no comment will be added.\");\n        }\n    } else\n        response = gs.getMessage(\"I couldn't find the record.\");\n\n    return response;\n})()",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "3250b250b5cb418196cfbc20ca328db5": {
          "id": "3250b250b5cb418196cfbc20ca328db5",
          "stepType": "Decision",
          "name": "Decision",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "7304212c5bd5435ca761cb646d0f038e": {
          "id": "7304212c5bd5435ca761cb646d0f038e",
          "name": "Set Incident Table",
          "script": "(function execute() {\n    vaVars.table_name = 'incident';\n    vaVars.count = vaVars.incident_count;\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "d7131491ea644729b8df78f4b089ffa9": {
          "id": "d7131491ea644729b8df78f4b089ffa9",
          "name": "Set Requested Item table",
          "script": "(function execute() {\n    vaVars.table_name = 'sc_req_item';\n    vaVars.count = vaVars.requested_item_count;\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "891ca6cf66a941309b2b4fd59dfc5304": {
          "id": "891ca6cf66a941309b2b4fd59dfc5304",
          "name": "Set Table",
          "script": "(function execute() {\n    vaVars.table_name = vaInputs.incident_or_requested_item;\n    if (vaVars.table_name == 'incident')\n        vaVars.count = vaVars.incident_count;\n    else \n        vaVars.count = vaVars.requested_item_count;\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "6acc934987644ad28ca73d769862c17f": {
          "id": "6acc934987644ad28ca73d769862c17f",
          "name": "Set Sys Id",
          "script": "(function execute() {\n    vaVars.sys_id = vaInputs.get_record.getValue();\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "mode": "query",
            "value": ""
          }
        },
        "a4ae08674a91451aa12f1e2d3993fe99": {
          "id": "a4ae08674a91451aa12f1e2d3993fe99",
          "stepType": "TextOutput",
          "name": "Before Card",
          "value": {
            "value": "(function execute() {\n    if (vaVars.table_name == 'incident') {\n        if (parseInt(vaVars.count) == 1)\n            return gs.getMessage('OK, here is your incident:');\n        return gs.getMessage('Here is your incident:');\n    }\n    if (parseInt(vaVars.count) == 1)\n        return gs.getMessage('OK, here is your requested item:');\n    return gs.getMessage('Here is your requested item:');\n})()\n",
            "mode": "script"
          },
          "applicability": {
            "mode": "query",
            "value": ""
          },
          "secure": false
        },
        "c2c4da79e392449c83bb217a5d4b7599": {
          "id": "c2c4da79e392449c83bb217a5d4b7599",
          "stepType": "Decision",
          "name": "Decision"
        },
        "fe0ff5d9fb834925bce7e5cd7674eedc": {
          "id": "fe0ff5d9fb834925bce7e5cd7674eedc",
          "stepType": "RecordOutput",
          "name": "Incident card",
          "variableId": "",
          "mode": "script",
          "tableName": "incident",
          "fields": [
            "short_description",
            "state",
            "assigned_to",
            "sys_updated_on",
            "comments"
          ],
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": "sys_id={{vaVars.sys_id}}"
          },
          "cardTemplate": "General",
          "cardFields": {},
          "cardDefinition": {}
        },
        "6db044452a6248739aa8620d0d52c8ec": {
          "id": "6db044452a6248739aa8620d0d52c8ec",
          "stepType": "RecordOutput",
          "name": "Requested Item card",
          "variableId": "",
          "mode": "script",
          "tableName": "sc_req_item",
          "fields": [
            "cat_item",
            "state",
            "assigned_to",
            "sys_updated_on",
            "comments"
          ],
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": "sys_id={{vaVars.sys_id}}"
          },
          "cardTemplate": "General",
          "cardFields": {},
          "cardDefinition": {}
        },
        "018d2c28b6dc4028ae4405db8d898746": {
          "id": "018d2c28b6dc4028ae4405db8d898746",
          "stepType": "Decision",
          "name": "Decision"
        },
        "eadfb34c075041109c55a761d292bc95": {
          "id": "eadfb34c075041109c55a761d292bc95",
          "name": "Set Sys Id",
          "script": "(function execute() {\n    // Query the requested item table and get the only requested item\n    var gr = new GlideRecord(vaVars.table_name);\n    gr.addQuery('active', true);\n    if (vaVars.table_name == 'incident')\n        gr.addQuery('caller_id', vaInputs.user);\n    else\n        gr.addQuery('request.requested_for', vaInputs.user);\n\n    gr.setLimit(1);\n    gr.query();\n    if (gr.next()) {\n        vaVars.sys_id = gr.getUniqueValue();\n    }\n})()\n",
          "stepType": "ScriptAction",
          "applicability": {
            "value": "",
            "mode": "query"
          }
        }
      },
      "edges": [
        {
          "id": "076df3f8dc0e45bc9fc51ef3fdbdd0e9",
          "edgeType": "Edge",
          "source": "7304212c5bd5435ca761cb646d0f038e",
          "target": "018d2c28b6dc4028ae4405db8d898746",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "137d10d243f74fa687b37720788fa083",
          "edgeType": "Edge",
          "source": "cd7061bc68764706b9fc69c0a7a01a04",
          "target": "6acc934987644ad28ca73d769862c17f",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "64339b82a4a54d068c3442a8e0ecaf31",
          "edgeType": "Edge",
          "source": "fe0ff5d9fb834925bce7e5cd7674eedc",
          "target": "911e40bccaec4adf827c92051eb5f86f",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "627477a41265433594913a85565a729c",
          "edgeType": "Branch",
          "source": "5b081cc2939241b69c5a8da1d061a695",
          "target": "25988d9eecfa46f7be55276d8eea7356",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "add_comment=",
            "mode": "query"
          },
          "label": "No"
        },
        {
          "id": "1810090183224c58968ffd7afb164639",
          "edgeType": "Branch",
          "source": "3250b250b5cb418196cfbc20ca328db5",
          "target": "6f2d998aa07a403682d1afb5b8a857f5",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return parseInt(vaVars.incident_count) != 0 || parseInt(vaVars.requested_item_count) != 0;\n})()\n"
          },
          "label": "Has Records"
        },
        {
          "id": "2705de46141a4159afbee8e18e4c2349",
          "edgeType": "Edge",
          "source": "6acc934987644ad28ca73d769862c17f",
          "target": "a4ae08674a91451aa12f1e2d3993fe99",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "65c6c7a3019b4ab29087c3998dedd6ef",
          "edgeType": "Edge",
          "source": "891ca6cf66a941309b2b4fd59dfc5304",
          "target": "018d2c28b6dc4028ae4405db8d898746",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "eae0842f554f4be58fec3547121a19e4",
          "edgeType": "Edge",
          "source": "3f774f18478d4f22b2e060ba026ba718",
          "target": "25988d9eecfa46f7be55276d8eea7356",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "bc1ca8468199423c9b99c894a04d4466",
          "edgeType": "Edge",
          "source": "c587a18289854800b91793160e456e2e",
          "target": "964a1722dd0947978d00a74b43e2bb21",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "cd7125be381241bea3634edc75b04020",
          "edgeType": "Branch",
          "source": "6f2d998aa07a403682d1afb5b8a857f5",
          "target": "4fa5b9e4e7254eccaefc857ad5786381",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return vaVars.incident_count != 0 &amp;&amp; vaVars.requested_item_count != 0;\n})()"
          },
          "label": "Both Incidents and Requested Items"
        },
        {
          "id": "4089e8cd7a0c4460aa85af04b1628214",
          "edgeType": "Edge",
          "source": "da9fcbdd15f147a0ac882a028591bcef",
          "target": "25988d9eecfa46f7be55276d8eea7356",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "2502407f7dcc4cc1934b5a754fdb43df",
          "edgeType": "Edge",
          "source": "911e40bccaec4adf827c92051eb5f86f",
          "target": "5b081cc2939241b69c5a8da1d061a695",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "62d77ef76620415a93c13ac34cb2a2b4",
          "edgeType": "Branch",
          "source": "5b081cc2939241b69c5a8da1d061a695",
          "target": "fa58d9fcb0274b53a79d526967c40b5a",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "add_comment=true",
            "mode": "query"
          },
          "label": "Yes"
        },
        {
          "id": "d2bea4a12dbe4fe68781fe928250ae74",
          "edgeType": "Edge",
          "source": "fa58d9fcb0274b53a79d526967c40b5a",
          "target": "3f774f18478d4f22b2e060ba026ba718",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "e79faeb483384abd9213830c6d9268aa",
          "edgeType": "Edge",
          "source": "964a1722dd0947978d00a74b43e2bb21",
          "target": "3250b250b5cb418196cfbc20ca328db5",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "7302147cb9654d478aa5f73343cd33f8",
          "edgeType": "Branch",
          "source": "3250b250b5cb418196cfbc20ca328db5",
          "target": "da9fcbdd15f147a0ac882a028591bcef",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return parseInt(vaVars.incident_count) == 0 &amp;&amp; parseInt(vaVars.requested_item_count) == 0;\n})()\n"
          },
          "label": "Neither Incidents nor Requested Items"
        },
        {
          "id": "1cd08ac5caf740688d19feeafb28edef",
          "edgeType": "Branch",
          "source": "6f2d998aa07a403682d1afb5b8a857f5",
          "target": "7304212c5bd5435ca761cb646d0f038e",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return parseInt(vaVars.incident_count) &gt; 0 &amp;&amp; parseInt(vaVars.requested_item_count) == 0;\n})()"
          },
          "label": "Incidents only"
        },
        {
          "id": "9eabe5342a454e6ba1f9f80bce49082c",
          "edgeType": "Branch",
          "source": "6f2d998aa07a403682d1afb5b8a857f5",
          "target": "d7131491ea644729b8df78f4b089ffa9",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return parseInt(vaVars.requested_item_count) &gt; 0 &amp;&amp; parseInt(vaVars.incident_count) == 0;\n})()\n"
          },
          "label": "Requested Items Only"
        },
        {
          "id": "0c1ec178c87e4066b53ce09b50c17348",
          "edgeType": "Edge",
          "source": "4fa5b9e4e7254eccaefc857ad5786381",
          "target": "891ca6cf66a941309b2b4fd59dfc5304",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "e64afc9d1faf4db59f0cbaeb5ef7d56e",
          "edgeType": "Edge",
          "source": "a4ae08674a91451aa12f1e2d3993fe99",
          "target": "c2c4da79e392449c83bb217a5d4b7599",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "e754a22e0f16468694fa3d92b45473f5",
          "edgeType": "Branch",
          "source": "c2c4da79e392449c83bb217a5d4b7599",
          "target": "fe0ff5d9fb834925bce7e5cd7674eedc",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return vaVars.table_name == 'incident';\n})()\n"
          },
          "label": "Incident"
        },
        {
          "id": "029b88730bd6439a971764387ac7bfc7",
          "edgeType": "Branch",
          "source": "c2c4da79e392449c83bb217a5d4b7599",
          "target": "6db044452a6248739aa8620d0d52c8ec",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return vaVars.table_name == 'sc_req_item';\n})()\n"
          },
          "label": "Requested Item"
        },
        {
          "id": "0e5fa1db70444297931ae8f8e772e27c",
          "edgeType": "Edge",
          "source": "6db044452a6248739aa8620d0d52c8ec",
          "target": "911e40bccaec4adf827c92051eb5f86f",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "f0d8695b7f5f471fae2ede84b0995685",
          "edgeType": "Edge",
          "source": "d7131491ea644729b8df78f4b089ffa9",
          "target": "018d2c28b6dc4028ae4405db8d898746",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "918c41add9b54574854f2a3129908bf2",
          "edgeType": "Branch",
          "source": "018d2c28b6dc4028ae4405db8d898746",
          "target": "cd7061bc68764706b9fc69c0a7a01a04",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return vaVars.count &gt; 1;\n})()"
          },
          "label": "Multiple Records"
        },
        {
          "id": "68b77c97943d43e4a90316503b6214bb",
          "edgeType": "Branch",
          "source": "018d2c28b6dc4028ae4405db8d898746",
          "target": "eadfb34c075041109c55a761d292bc95",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "mode": "script",
            "value": "(function execute() {\n    return parseInt(vaVars.count) == 1;\n})()"
          },
          "label": "Only One Record"
        },
        {
          "id": "a86085ade5824f5b9ef61205e2a85602",
          "edgeType": "Edge",
          "source": "eadfb34c075041109c55a761d292bc95",
          "target": "a4ae08674a91451aa12f1e2d3993fe99",
          "sourcePort": "",
          "targetPort": ""
        }
      ]
    }
  },
  "variables": {
    "bb825aaf85784e4682d77378e21daab3": {
      "id": "bb825aaf85784e4682d77378e21daab3",
      "name": "get_record",
      "label": "Get Record",
      "varType": "reference",
      "table": "sc_req_item",
      "category": "vaInputs"
    },
    "f07d049df6f64f8497f1f425c5c5b2d8": {
      "id": "f07d049df6f64f8497f1f425c5c5b2d8",
      "name": "incident_or_requested_item",
      "label": "Incident Or Requested Item",
      "varType": "choice",
      "choices": [
        {
          "label": "Incident",
          "value": "incident"
        },
        {
          "label": "Requested Item ",
          "value": "sc_req_item"
        }
      ],
      "category": "vaInputs"
    },
    "41bf37f22738413d8d998e90440c489a": {
      "id": "41bf37f22738413d8d998e90440c489a",
      "name": "add_comment",
      "label": "Add Comment",
      "varType": "boolean",
      "category": "vaInputs"
    },
    "b9c00d3c377846cda0084871ced16feb": {
      "id": "b9c00d3c377846cda0084871ced16feb",
      "name": "comment",
      "label": "Comment",
      "varType": "string",
      "category": "vaInputs",
      "secure": false,
      "encryptionSalt": {
        "value": "MTYyMzA1Mjg5ODU0NiBWQSBEZXNpZ25lciBpcyBhd2Vzb21l",
        "mode": "simple"
      },
      "encryptionHashFunction": "SHA-256"
    },
    "f93e43cb0a84440881dbf2806dd8b9f8": {
      "id": "f93e43cb0a84440881dbf2806dd8b9f8",
      "value": {
        "mode": "simple",
        "value": "0"
      },
      "name": "index",
      "label": "index",
      "varType": "script",
      "category": "vaVars"
    },
    "3aec11d744404e6c8719f14d10b8680f": {
      "id": "3aec11d744404e6c8719f14d10b8680f",
      "value": {
        "mode": "simple",
        "value": "5"
      },
      "name": "limit",
      "label": "limit",
      "varType": "script",
      "category": "vaVars"
    },
    "589e7868bacc45d9961500e2e26df2c6": {
      "id": "589e7868bacc45d9961500e2e26df2c6",
      "value": {
        "mode": "simple",
        "value": "0"
      },
      "name": "incident_count",
      "label": "incident_count",
      "varType": "script",
      "category": "vaVars"
    },
    "e698f789c49f4de7931d0b4fce678355": {
      "id": "e698f789c49f4de7931d0b4fce678355",
      "value": {
        "mode": "simple",
        "value": "0"
      },
      "name": "requested_item_count",
      "label": "requested_item_count",
      "varType": "script",
      "category": "vaVars"
    },
    "6dfd7f423a9545e6bd9642a938c33da5": {
      "id": "6dfd7f423a9545e6bd9642a938c33da5",
      "value": {
        "mode": "script",
        "value": "(function execute() {\n    return gs.getProperty('sn_itsm_va.com.snc.itsm.virtualagent.portal_url', 'sp');\n})()\n"
      },
      "name": "service_portal_base_url",
      "label": "service_portal_base_url",
      "varType": "script",
      "category": "vaVars"
    },
    "fb264f26299e49b8990417510fa1f460": {
      "id": "fb264f26299e49b8990417510fa1f460",
      "value": {
        "mode": "script",
        "value": "(function execute() {\n    return gs.getProperty('glide.servlet.uri') + '/';\n})()\n"
      },
      "name": "base_url",
      "label": "base_url",
      "varType": "script",
      "category": "vaVars"
    },
    "89c28607206e4c82b190e807c4f1c90e": {
      "id": "89c28607206e4c82b190e807c4f1c90e",
      "name": "LiveAgent_application",
      "value": {
        "mode": "simple",
        "value": "itsm"
      },
      "varType": "script",
      "label": "LiveAgent_application",
      "category": "vaVars"
    },
    "0135477fefcf40c5a3ea91de00d26ec0": {
      "id": "0135477fefcf40c5a3ea91de00d26ec0",
      "value": {
        "value": "",
        "mode": "simple"
      },
      "name": "table_name",
      "label": "table_name",
      "varType": "script",
      "category": "vaVars"
    },
    "847ba7c11c584be5aa43aa7eb1e06e68": {
      "id": "847ba7c11c584be5aa43aa7eb1e06e68",
      "value": {
        "mode": "simple",
        "value": "0"
      },
      "name": "count",
      "label": "count",
      "varType": "script",
      "category": "vaVars"
    },
    "53b55611069d4470930869493d603d7f": {
      "id": "53b55611069d4470930869493d603d7f",
      "value": {
        "value": "",
        "mode": "simple"
      },
      "name": "sys_id",
      "label": "sys_id",
      "varType": "script",
      "category": "vaVars"
    },
    "6d861395965948f99356661cdd1ea190": {
      "category": "vaInputs",
      "id": "6d861395965948f99356661cdd1ea190",
      "label": "User",
      "name": "user",
      "table": "sys_user",
      "varType": "reference"
    }
  }
}</graph>
        <key_phrases>Submit a Request,ticket status,latest,update,check,status,Request,Requested Item,Incident</key_phrases>
        <library>false</library>
        <live_agent>false</live_agent>
        <name>Submit a Request</name>
        <nlu_intent/>
        <nlu_intent_label/>
        <nlu_model/>
        <nlu_model_label/>
        <nlu_provider/>
        <palette_label/>
        <roles/>
        <secure_custom_input_control>false</secure_custom_input_control>
        <source_topic_id>a30312ee53130010c839ddeeff7b124d</source_topic_id>
        <sys_class_name>sys_cb_topic</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-06-15 14:59:55</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>6e4049222f081510b7b92e5df699b6f0</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Submit a Request</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_cb_topic_6e4049222f081510b7b92e5df699b6f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-06-15 15:00:04</sys_updated_on>
        <triggerable_by_notification>false</triggerable_by_notification>
        <type>STANDARD</type>
        <variables/>
    </sys_cb_topic>
    <sys_variable_value action="delete_multiple" query="document_key=6e4049222f081510b7b92e5df699b6f0"/>
</record_update>
